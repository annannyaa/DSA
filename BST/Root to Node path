vector<int>* getRootToNodePath(BinaryTreeNode<int> *root, int data){
  if(root==NULL){
  return NULL;}
  if(root->data==data){
  vector<int> * output= new vector<int>();
  output->push_back(root->data);
  return output;}
  vector<int>* leftOutput= getRootToNodePath(root->left,data);
  if(leftOutput!=NULL){
  leftOutput->push_back(root->data);
  return leftOutput;}
  else{
  return NULL;}
  
  vector<int>* rightOutput= getRootToNodePath(root->right,data);
  if(rightOutput!=NULL){
  rightOutput->push_back(root->data);
  return rightOutput;}
  else{
  return NULL;}
}

in the main function:
vector<int> * output= getRootToNodePath(root, somedata);
to print the vector:
for(int i=0; i<output->size();i++){
cout<<output->at(i)<<endl;
}
delete output;  //because vector created dynamically
