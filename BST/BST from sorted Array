Given a sorted integer array A of size n, which contains all unique elements. You need to construct a balanced BST from this input array. Return the root of constructed BST.
Note: If array size is even, take first mid as root.

input: 7
1 2 3 4 5 6 7
output: 4 2 1 3 6 5 7 
**************************************
BinaryTreeNode<int>*  helper(int *input, int si, int ei){
    if(si>ei){
        return NULL;
    }
    int m= (si+ei)/2;
    BinaryTreeNode<int>* root= new BinaryTreeNode<int>(input[m]);
    root->left=helper(input,si,m-1);
    root->right=helper(input,m+1,ei);
    return root;
}
BinaryTreeNode<int>* constructTree(int *input, int n) {
	// Write your code here
    return helper(input,0,n-1);
}
