For a given Binary Tree of type integer and a number X, find whether a node exists in the tree with data X or not
********************************************************************************
bool isNodePresent(BinaryTreeNode<int> *root, int x) {
    // Write your code here
bool ans=false;
if(root==NULL){
    return false;
}
  if(root->data==x){
      ans=true;
      return ans;
  }
if(root->left!=NULL){
    bool temp=isNodePresent(root->left,x);
    if(temp==true){
        ans=true;
    }
return ans;}
if(root->right!=NULL){
    bool temp1=isNodePresent(root->right,x);
     if(temp1==true){
        ans=true;
    }
return ans;}
return ans;
}
#################################################################################
For a given Binary Tree of integers, find and return the height of the tree.
***********************************************************************************
int height(BinaryTreeNode<int> *root) {
    int h=0;
    if(root==NULL)
        return h;
    
    int lefth= height(root->left);
    int righth= height(root->right);
    
   if(lefth>righth)
       return lefth +1;
    else
        return righth+1;

}
